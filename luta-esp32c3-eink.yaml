substitutions:
  device_name: esp32c3-eink

esphome:
  name: luta-esp32c3-eink

esp32:
  board: airm2m_core_esp32c3
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0
  
# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret my_ap_ssid
  password: !secret my_ap_password
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "luta-esp32c3-eink"
    password: "12345678"

captive_portal:

time:
  - platform: sntp
    id: sntp_time
    timezone: Asia/Taipei

binary_sensor:
  - platform: status
    name: "${device_name} Status"
    id: system_status

  - platform: gpio
    id: button_io5
    name: "${device_name} IO5"
    pin:
      number: GPIO05
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      then:
        - display.page.show_next: my_display
        - component.update: my_display

  - platform: gpio
    id: button_io8
    name: "${device_name} IO8"
    pin:
      number: GPIO08
      mode: INPUT_PULLUP
      inverted: True


text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${device_name} IP Address"

sensor:
  - platform: wifi_signal
    id: wifisignal
    name: "${device_name} WiFi Signal"
    update_interval: 120s

  #REPLACE WITH YOUR SENSOR ENTITY ID
  - platform: homeassistant
    entity_id: sensor.kids_room_temperature
    id: temp_data
    
  #REPLACE WITH YOUR SENSOR ENTITY ID
  - platform: homeassistant
    entity_id: sensor.kids_room_humidity
    id: hum_data 

switch:
  - platform: gpio
    name: "${device_name} D5 LED"
    pin: GPIO13
    id: relay

button:
  - platform: template
    name: 'Show Time Page'
    icon: 'mdi:update'
    on_press:
      then:
        - display.page.show: p1
        - component.update: my_display
    internal: false

  - platform: template
    name: 'Show Message Page'
    icon: 'mdi:update'
    on_press:
      then:
        - display.page.show: p2
        - component.update: my_display
    internal: false

status_led:
  pin:
    number: GPIO12

font:
  - file: "fonts/GothamRnd-Book.ttf"
    id: time_font
    size: 80
    glyphs: [0, 1, 2, 3, 4, 5, 6, 7 ,8, 9, ':']

  - file: "fonts/NotoSansTC-Medium.ttf"
    id: weekday_font
    size: 25
    glyphs: 週一二三四五六日

  - file: "fonts/NotoSansTC-Medium.ttf"
    id: test_font
    size: 40
    glyphs: 衣服已經洗拿去烘好囉!趕快收起來ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz,."%-~_:°

  - file: "fonts/GothamRnd-Bold.ttf"
    id: temp_font
    size: 30
    glyphs: &font-glyphs    
      ['!', ',', '.', '"', '%', '-', '_', ':', '°', '/',
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ',
      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
      'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 
      'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g',
      'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',
      's', 't', 'u', 'v', 'w', 'x', 'y', 'z']


  - file: "fonts/GothamRnd-Book.ttf"
    id: date_font
    size: 30
    glyphs: *font-glyphs   

  - file: "fonts/materialdesignicons-7296.ttf"
    id: icon_font
    size: 30
    glyphs:
      - "\U000F058E" # mdi-water-percent
      - "\U000F050F" # mdi-thermometer

  - file: "fonts/materialdesignicons-7296.ttf"
    id: wifi_font
    size: 20
    glyphs: &icon-glyphs
      - "\U000F0783" # mdi-signal-off
      - "\U000F08BF" # mdi-signal-cellular-outline bad
      - "\U000F08BC" # mdi-signal-cellular-1
      - "\U000F08BD" # mdi-signal-cellular-2
      - "\U000F08BE" # mdi-signal-cellular-3 good 

color:
  - id: color_black
    red: 0%
    green: 0%
    blue: 0%
    white: 50%
    
  - id: color_white
    red: 0%
    green: 0%
    blue: 0%
    white: 0%

spi:
  clk_pin: GPIO4
  mosi_pin: GPIO6

display:
  - platform: waveshare_epaper
    cs_pin: GPIO7
    dc_pin: GPIO10
    reset_pin: GPIO3
    busy_pin: GPIO2
    model: 2.90in
    rotation: 90
    update_interval: 10s
    full_update_every: 60
    id: my_display
    pages:
      - id: p1
        lambda: |-    
          //wifi signal
          if (id(wifisignal).state >= -60) {
              //Excellent
              it.print(0, 0, id(wifi_font), "\U000F08BE");
          } else if (id(wifisignal).state  >= -70) {
              //Good
              it.print(0, 0, id(wifi_font), "\U000F08BD");
          } else if (id(wifisignal).state  >= -75) {
              //Fair
              it.print(0, 0, id(wifi_font),"\U000F08BC");
          } else if (id(wifisignal).state  >= -85) {
              //Weak
              it.print(0, 0, id(wifi_font),"\U000F08BF");
          } else {
              //Unlikely working signal
              it.print(0, 0, id(wifi_font),"\U000F0783");
          }
        
          //time
          //it.printf(75,1, id(time_font), TextAlign::TOP_CENTER, "20");
          it.strftime(75,1, id(time_font), TextAlign::TOP_CENTER, "%H",id(sntp_time).now());
          
          it.printf(150,-6, id(time_font), TextAlign::TOP_CENTER, ":");
          
          //it.printf(225,1, id(time_font), TextAlign::TOP_CENTER, "08");
          it.strftime(225,1, id(time_font), TextAlign::TOP_CENTER, "%M",id(sntp_time).now());
          
          it.strftime(120, 70, id(date_font), TextAlign::TOP_CENTER, "%Y/%m/%d", id(sntp_time).now());
          
          if(id(sntp_time).now().day_of_week == 1){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週日");
          } else if (id(sntp_time).now().day_of_week == 2){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週一");
          } else if (id(sntp_time).now().day_of_week == 3){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週二");
          } else if (id(sntp_time).now().day_of_week == 4){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週三");
          } else if (id(sntp_time).now().day_of_week == 5){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週四");
          } else if (id(sntp_time).now().day_of_week == 6){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週五");
          } else if (id(sntp_time).now().day_of_week == 7){
            it.printf(250,64, id(weekday_font), TextAlign::TOP_CENTER, "週六");
          }      

          
          //temp
          it.print(25, 97, id(icon_font),TextAlign::TOP_CENTER, "\U000F050F");          
          if(id(temp_data).has_state()){
            it.printf(90,100, id(temp_font), TextAlign::TOP_CENTER, "%.1f°C", id(temp_data).state);
          }
          //hum
          it.print(185, 100, id(icon_font),TextAlign::TOP_CENTER, "\U000F058E");          
          if(id(hum_data).has_state()){
            it.printf(240, 100, id(temp_font), TextAlign::TOP_CENTER, "%.1f%%", id(hum_data).state);
          }  

      - id: p2
        lambda: |-     
        
          //wifi signal
          if (id(wifisignal).state >= -60) {
              //Excellent
              it.print(0, 0, id(wifi_font), "\U000F08BE");
          } else if (id(wifisignal).state  >= -70) {
              //Good
              it.print(0, 0, id(wifi_font), "\U000F08BD");
          } else if (id(wifisignal).state  >= -75) {
              //Fair
              it.print(0, 0, id(wifi_font),"\U000F08BC");
          } else if (id(wifisignal).state  >= -85) {
              //Weak
              it.print(0, 0, id(wifi_font),"\U000F08BF");
          } else {
              //Unlikely working signal
              it.print(0, 0, id(wifi_font),"\U000F0783");
          }
    
          it.printf(150,15, id(test_font), TextAlign::TOP_CENTER, "衣服已經洗好囉!");
          it.printf(150,70, id(test_font), TextAlign::TOP_CENTER, "趕快拿去烘~");
